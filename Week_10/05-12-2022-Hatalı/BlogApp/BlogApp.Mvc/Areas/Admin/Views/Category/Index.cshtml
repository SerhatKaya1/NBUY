@using BlogApp.Shared.Utilities.Result.ComplexTypes
@using BlogApp.Entities.Dtos
@model CategoryListDto
@{
    Layout = "_Layout";
    ViewBag.Title = "Kategoriler Anasayfa";
}
@if (Model.ResultStatus == ResultStatus.Success)
{
    @*Kategoriler listelenecek*@
    <div id="modalPlaceHolder" aria-hidden="true"></div>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="index.html">Dashboard</a></li>
        <li class="breadcrumb-item active">Kategoriler</li>
    </ol>
    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-table mr-1"></i>
            Kategoriler
        </div>
        <div class="card-body">
            <div class="spinner-border" role="status" style="display:none;">
                <span class="sr-only">Loading...</span>
            </div>
            <div class="table-responsive">
                <table class="table table-bordered" id="categoriesTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Ad</th>
                            <th>Açıklama</th>
                            <th>Aktif mi?</th>
                            <th>Silinmiş mi?</th>
                            <th>Not</th>
                            <th>Oluşturulma Tarihi</th>
                            <th>Oluşturan Kullanıcı</th>
                            <th>İşlemler</th>

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var category in Model.Categories)
                        {
                            <tr name="@category.Id">
                                @*name si şu olan tr yi sil diyoruz*@
                                <td>@category.Id</td>
                                <td>@category.Name</td>
                                <td>@category.Description</td>
                                <td>@category.IsActive</td>
                                <td>@category.IsDeleted</td>
                                <td>@category.Note</td>
                                <td>@category.CreatedDate.ToShortDateString()</td>
                                <td>@category.CreatedByName</td>
                                <td>
                                    <button class="btn btn-warning btn-sm"><span class="fas fade-edit text-white"></span>Düzelt</button>
                                    <button class="btn btn-danger btn-sm btn delete" data-itemid="@category.Id"><span class="fas fa-minus-circle"></span></button>
                                    @*btn bir sürü sil bütonu olacak ve onlara tıklanıp tıklanmadığını anlamak için. data idilgili category veri tabanından silerken*@

                                </td>

                            </tr>
                        }


                    </tbody>
                </table>
            </div>
        </div>
    </div>
}

@section Scripts{
    <script>
        $(document).ready(function () {
            //Datatable burada başlıyor
            $('#categoriesTable').DataTable({

                dom: "<'row'<'col-sm-3'l><'col-sm-6 text-center'B><'col-sm-3'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                buttons: [
                    {
                        text: 'Ekle',
                        attr: {
                            id: 'btnAdd'
                        },
                        action: function (e, dt, node, config) {

                        },
                        className: 'btn btn-success'
                    },

                    {
                        text: 'Yenile',
                        action: function (e, dt, node, config) {

                            //Burada yenile bütonuna basıldığında ajax ile içeriğimizi yenileyeceğiz.
                            $.ajax({ //belli bir bölümü güncellemek istiyoruz. json tipinde verileri alacak.
                                type: 'GET', //veriyi çektik . bunları yap demeden önce git o spinniri göster tabloyu gizle.
                                url: '@Url.Action("GetAllCategories","Category")',
                                contentType: 'application/json', //json data ile çalışacağım.
                                //json kategori ile ne yapacağız ? alttaki kod.Yenileye bastığımda tablo içeriğini oluşturuduğumuzda geçen sürede                                   dönen simge işlemi.kodsatırı 22ye gir. veritabından verileri çekecek ben onları show yapacağım vb o süre içerisinde                                 yapılacak.
                                //istediğim zaman göstereceğim istemediğim zaman göstermeyeceğiz.
                                beforeSend: function () { //Göndermeden önce ne yapacak.Ben seçici ile gidip eskisi dataları gizle

                                    $('#categoriesTable').fadeOut(1500);
                                    $('.spinner-border').show(); //show gösteriyor yani navdan çıkarıyor.

                                },
                                success: function (data) { //yukarıdan gelen data parametre olarak geliyor.Data ile ilgili kontrolleri yapabilirim.                                         Resultstatüs değeri categorymanager.cs de kontrol ediyoruz .resultstatüs 0 mı diyeceğiz.
                                    const categoryListDto = jQuery.parseJSON(data);
                                    console.log(categoryListDto);

                                    if (categoryListDto.ResultStatus === 0)
                                        let tableBody = '';
                                    //eğer işlem başarılı ise .bunun içinde categori var demektir.Amaç tabloyu yenile dediğimizde içerik kısmı tbody                                      nın yenisi yaratacağız . eskisinin yerine bunu koy diyeceğiz.
                                    {
                                        let tableBody = ''; //değişim işlemini yapmak için atama yaptık
                                        $.each(categoryListDto.Categories.$values,
                                            function (index, category) { //Categories içinde her bir değer value olara yer alıyor .sıradaki elemanım                                          kategori olsun diyoruz en son yazılan .index.category kısmında
                                                                tableBody += `
                                                                        <tr>
                                                                            <td>${category.Id}</td>
                                                                            <td>${category.Name}</td>
                                                                            <td>${category.Description}</td>
                                                                            <td>${convertFirstLetterToUpperCase(category.IsActive)}</td>
                                                                            <td>${convertFirstLetterToUpperCase(category.IsDeleted)}</td>
                                                                            <td>${category.Note ?? ""}</td>
                                                                            <td>${convertToShortDate(category.IsCreatedDate)}</td>
                                                                            <td>${category.CreadByName}</td>
                                                                            </tr>

                                                                `;
                                            });
                                        $('#categoriesTable > tbody').replaceWith(tableBody);
                                        $('.spinner-border').hide();
                                        $('#categoriesTable').fadeIn(1500);

                                    }else{
                                        toastr.error('Kategori Yok', 'Hata');
                                    }
                            },
                                error: function (err) {
                                    console.log(err);
                                }
                    });
        },
            className: 'btn btn-warning'
                                                    }
                                                ],
            language: {
            url: 'https://cdn.datatables.net/plug-ins/1.13.1/i18n/tr.json'
        }
                                            });
        //Datatable burada bitiyor


        $(function () {
            const url = '@Url.Action("Add","Category")';
            const placeHolderDiv = $('#modalPlaceHolder');
            //Ajax'la partial viewimizi ekrana getirme
            $('#btnAdd').click(function () {
                $.get(url).done(function (data) {
                    placeHolderDiv.html(data);
                    placeHolderDiv.find(".modal").modal('show');
                });
            });
            //Ajax'la (GET) partial viewimizi ekrana getirme BİTTİ

            //Ajax'la POST işlemleri
            placeHolderDiv.on('click', '#btnSave', function (event) {

                event.preventDefault();
                const form = $('#form-category-add');
                const actionUrl = form.attr('action');
                const dataToSend = form.serialize();
                console.log(dataToSend);
                $.post(actionUrl, dataToSend).done(function (data) {
                    const categoryAddAjaxModel = jQuery.parseJSON(data);
                    const newFormBody = $('.modal-body', categoryAddAjaxModel.CategoryAddPartial);
                    placeHolderDiv.find('.modal-body').replaceWith(newFormBody);
                    const isValid = newFormBody.find('[name="IsValid"]').val() === 'True';
                    if (isValid) {
                        const newTableRow = `
                                                                                                                <tr>
                                                                                                                    <td>${categoryAddAjaxModel.CategoryDto.Category.Id}</td>
                                                                                                                    <td>${categoryAddAjaxModel.CategoryDto.Category.Name}</td>
                                                                                                                    <td>${categoryAddAjaxModel.CategoryDto.Category.Description}</td>
                                                                                                                 <td>${convertFirstLetterToUpperCase(categoryAddAjaxModel.CategoryDto.Category.IsActive)}</td>
                                                                                                                    <td>${convertFirstLetterToUpperCase(categoryAddAjaxModel.CategoryDto.Category.IsDeleted)}</td>
                                                                                                                    <td>${categoryAddAjaxModel.CategoryDto.Category.Note ?? ""}</td>
                                                                                                                    <td>${convertToShortDate(categoryAddAjaxModel.CategoryDto.Category.CreatedDate)}</td>
                                                                                                                    <td> ${categoryAddAjaxModel.CategoryDto.Category.CreatedByName}</td>
                                                                                                                </tr>
                                `;
                        const newTableRowObject = $(newTableRow);
                        newTableRowObject.hide();
                        $('#categoriesTable').append(newTableRowObject);
                        newTableRowObject.fadeIn(3000);
                        toastr.success(`${categoryAddAjaxModel.CategoryDto.Message}`, 'Başarılı!');
                        placeHolderDiv.find(".modal").modal('hide');
                    } else {
                        let summaryText = '<br>';
                        $('#validation-summary > ul > li').each(function () {
                            let liText = $(this).text();
                            summaryText += `*${liText}<br><br>`;
                        });
                        toastr.warning(summaryText, 'Dikkat!');
                    }
                });
            });

            //Ajax'la post işlemleri bitti

            //Ajax'la DELETE işlemleri
            $(document).on(c'lick', 'btn-delete', function (event) { //aktif sayfanın üzerindeclassı btn olanları click yaptığımızda şurdaki kodları                                                                      çalıştır.
                event.prevenetDefault();//Burada buttonumuzun tipi submit olmadığıiçin bunu kullanmasakda olur . sadece alışkanlık olsun diye                                                 yazıyoruz.
                const id = $(this).attr('data-id');
                Swal.fire({
                    title: 'Silmek istediğinizden emin misiniz?',
                    text: "İlgili kategori silinecektir!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Evet',
                    cancelButtonText: 'Hayır'
                }).then((result) => {
                    if (result.isConfirmed){
                        //Burada kategorinin silinme işlemleri yapılacak . Ardından silinme işlemleri gösterilecek..
                        $.ajax({ //sunucuya bir veri yolla ve kayıt yap . post işlemi
                            type: 'POST'
                                                        dataType: 'json',
                            data: { categoryId: id },
                            url: '@Url.Action("Delete","Category")'
                                                        succes: function (data) {
                                const result = jQuery.parseJSON(data);
                                if (result.ResultStatus === 0) { //tamama basıldıyasa bir tane daha modul çıkar ve tamama bas demek
                                    

                                    const tableRow = $(`[name="${id}"]`);
                                    tableRow.fadeOut(3000);

                                }else{
                                    Swal.fire({
                                        title: 'Hata oluştu!',
                                        text: '${result.Message}',
                                        icon: 'error',
                                        confirmButtonText: 'Tamam'
                                    });
                                }

                            },
                            error: function (err) {
                                console.log(err);
                                toastert.error(err.statusText, 'Hata!')
                            }
                        });
                    }
                 

                });
            });

        });
                                        
    </script>
}
